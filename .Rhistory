tt = read.csv("MAO16DATA_all.csv",header=T,as.is=T)
head(tt)
?read.csv
tt = read.csv("MAO16DATA_all.csv",header=T,as.is=T)[,c("plantID",
"code","cii","lblade","phylotax","phylotax2","btype","d10","dbh",
"sh","cmean","cd1","cd2","tv","tdm","il1","il2","il3","il4","il5","dbh0")]
head(tt)
tt$dbh/2000
tt$d10/2000
range(tt$d10/1000)
range(tt$d10/1000,na.rm=T)
head(tt)
pi*(tt$d10/2000)^2*sh/3
pi*(tt$d10/2000)^2*tt$sh/3
tt$sVol = pi*(tt$d10/2000)^2*tt$sh/3
head(tt)
(tt$tdm/100)/(tt$tv/100)
tt$sMass = tt$sVol*tt$sDens
tt$sVol*tt$sDens
tt$sDens
tt$sDens = (tt$tdm/100)/(tt$tv/100) # stem density (g/cm^3)
tt$sMass = tt$sVol*tt$sDens
head(tt)
pi*tt$cd1*tt$cd2/40000
tt$cPos = tt$cmean/100
tt$cPos
tt$cArea = pi*tt$cd1*tt$cd2/40000 # crown projected area (m^2)
head(tt)
tt = read.csv("MAO16DATA_all.csv",header=T,as.is=T)[,c("plantID",
"code","cii","lblade","phylotax","phylotax2","btype","d10","dbh",
"sh","cmean","cd1","cd2","tv","tdm","il1","il2","il3","il4","il5","tl1","tl2","tl3","tl4","tl5","dbh0")]
head(tt)
tt$sVol = pi*(tt$d10/2000)^2*tt$sh/3 # stem volume (cm^3)
tt$sDens = (tt$tdm/100)/(tt$tv/100) # stem density (g/cm^3)
tt$sMass = tt$sVol*tt$sDens # stem mass (g)
tt$cArea = pi*tt$cd1*tt$cd2/40000 # crown projected area (m^2)
tt$cPos = tt$cmean/100 # crown position (m)
head(tt)
tt[,"il1","il2","il3","il4","il5","tl1","tl2","tl3","tl4","tl5"]
apply(tt[,c("il1","il2","il3","il4","il5","tl1","tl2","tl3","tl4","tl5")],2,median,na.rm=T)
apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)
apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)-
apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
tt$cTran = apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)-
apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
tt$medInL = apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)
tt$medTrL = apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
tt$cAbs = (tt$medInL-tt$medTrL)/tt$medInL
head(tt)
tt$cPos
tt$cPos/tt$sMass
tt$cPos/(tt$sMass/1000)
tt$hge = tt$cPos/(tt$sMass/1000) # height gain efficiency (m/kg)
tt$hge
tt$cArea*tt$cAbs/tt$sMass
tt$cArea*tt$cAbs/(tt$sMass/1000)
tt$lie = tt$cArea*tt$cAbs/(tt$sMass/1000)
tt$hge
plot(hge~lie,tt)
summary(lm(hge~lie,tt))
abline(lm(hge~lie,tt),col=2)
plot(hge~lie,tt,log="x")
abline(lm(hge~lie,tt),col=2)
summary(lm(hge~lie,tt))
plot(hge~lie,tt,log="xy")
abline(lm(hge~lie,tt),col=2)
summary(lm(hge~lie,tt))
summary(lm(log(hge)~log(lie),tt))
abline(lm(log(hge)~log(lie),tt),col=2)
plot(log(hge)~log(lie),tt)
abline(lm(log(hge)~log(lie),tt),col=2)
tt[is.na(tt$hge),]
tt[is.na(tt$hge)&is.na(tt$lie),]
tt2 = tt[!is.na(tt$hge),]
tt2[tt$lie<0,]
tt2
head(tt2)
tt2[tt$lie<0,]
tt2[tt2$lie<0,]
tt2$lie<0
nrow(tt2)
tt2[tt2$lie<0,]
tt2[tt2$lie<0 & !is.na(tt2$lie),]
tt2[tt2$lie<=0 & !is.na(tt2$lie),]
tt2[tt2$cAbs<=0 & !is.na(tt2$lie),]
tt2[tt2$cAbs>0 & !is.na(tt2$lie),]
tt2 = tt2[tt2$cAbs>0 & !is.na(tt2$lie),]
plot(log(hge)~log(lie),tt2)
tt2[tt2$cAbs<=0 & !is.na(tt2$lie),]
plot(log(hge)~log(lie),tt2)
abline(lm(log(hge)~log(lie),tt2),col=2)
summary(lm(log(hge)~log(lie),tt2))
plot(log(hge)~log(lie),tt2)
plot(log(hge)~log(lie),tt)
plot(hge~lie,tt2)
tt2[tt2$cAbs==0,]
plot(log(hge)~log(lie),tt2)
abline(lm(log(hge)~log(lie),tt2),col=2)
plot(lm(log(hge)~log(lie),tt2))
tt2[254,]
tt2[255,]
tt2[256,]
exp(-4)
tt2[]
hist(tt2$hge)
any(tt2$hge==0)
any(tt2$hge<00)
hist(log(tt2$hge))
tt2$hge
hist(tt2$hge)
tt2 = tt[!is.na(tt$hge),]
any(tt2$hge<00)
any(tt2$hge<=0)
hist(tt2$hge)
hist(log(tt2$hge))
any(tt2$hge<=0)
hist(log(tt2$hge),xlab='log(HGE)',main="")
hist(tt2$hge,log="x")
hist(tt2$hge)
hist(log(tt2$hge),xlab='log(HGE)',main="")
hist(tt2$hge)
aSize = read.csv("maxsizes.csv",header=T,as.is=T)
aSize
getOption()
getOption("maxprint")
aSize = read.csv("maxsizes.csv",header=T,as.is=T)
head(aSize)
tt = read.csv("MAO16DATA_all.csv",header=T,as.is=T)[,c("plantID",
"code","cii","lblade","phylotax","phylotax2","btype","d10","dbh",
"sh","cmean","cd1","cd2","tv","tdm","il1","il2","il3","il4","il5",
"tl1","tl2","tl3","tl4","tl5","dbh0")]
head(tt)
tt$sVol = pi*(tt$d10/2000)^2*tt$sh/3 # stem volume (cm^3)
tt$sDens = (tt$tdm/100)/(tt$tv/100) # stem density (g/cm^3)
tt$sMass = tt$sVol*tt$sDens # stem mass (g)
tt$cArea = pi*tt$cd1*tt$cd2/40000 # crown projected area (m^2)
tt$cPos = tt$cmean/100 # crown position (m)
tt$medInL = apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)
tt$medTrL = apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
tt$cAbs = (tt$medInL-tt$medTrL)/tt$medInL
tt$hge = tt$cPos/(tt$sMass/1000) # height gain efficiency (m/kg)
tt$lie = tt$cArea*tt$cAbs/(tt$sMass/1000)
tt = tt[!is.na(tt$hge),]
hist(tt$hge)
hist(log(tt$hge),xlab='log(HGE)',main="")
any(tt$hge<=0)
tt$code
head(read.csv("MAO16DATA_all.csv",header=T,as.is=T))
tt = read.csv("MAO16DATA_all.csv",header=T,as.is=T)[,c("plantID","genus","epithet",
"code","cii","lblade","phylotax","phylotax2","btype","d10","dbh",
"sh","cmean","cd1","cd2","tv","tdm","il1","il2","il3","il4","il5",
"tl1","tl2","tl3","tl4","tl5","dbh0")]
head(tt)
tt$sVol = pi*(tt$d10/2000)^2*tt$sh/3 # stem volume (cm^3)
tt$sDens = (tt$tdm/100)/(tt$tv/100) # stem density (g/cm^3)
tt$sMass = tt$sVol*tt$sDens # stem mass (g)
tt$cArea = pi*tt$cd1*tt$cd2/40000 # crown projected area (m^2)
tt$cPos = tt$cmean/100 # crown position (m)
tt$medInL = apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)
tt$medTrL = apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
tt$cAbs = (tt$medInL-tt$medTrL)/tt$medInL
tt$hge = tt$cPos/(tt$sMass/1000) # height gain efficiency (m/kg)
tt$lie = tt$cArea*tt$cAbs/(tt$sMass/1000)
tt = tt[!is.na(tt$hge),]
#tt2 = tt2[tt2$cAbs>0 & !is.na(tt2$lie),]
#tt2[tt2$cAbs==0,]
#plot(log(hge)~log(lie),tt2)
#abline(lm(log(hge)~log(lie),tt2),col=2)
#summary(lm(log(hge)~log(lie),tt2))
#plot(lm(log(hge)~log(lie),tt2))
hist(tt$hge)
hist(log(tt$hge),xlab='log(HGE)',main="")
any(tt$hge<=0)
head(aSize)
aSize$sp = paste(aSize$Genus,aSize$epithet)
head(aSize)
tt$sp = paste(tt$genus,tt$epithet)
tt$sp%in%aSize$sp
sum(tt$sp%in%aSize$sp)
tt$sp[tt$sp%in%aSize$sp]
tt$sp[!tt$sp%in%aSize$sp]
unique(sort(tt$sp[!tt$sp%in%aSize$sp]))
tt = read.csv("MAO16DATA_all.csv",header=T,as.is=T)[,c("plantID","genus","epithet",
"code","cii","lblade","phylotax","phylotax2","btype","d10","dbh",
"sh","cmean","cd1","cd2","tv","tdm","il1","il2","il3","il4","il5",
"tl1","tl2","tl3","tl4","tl5","dbh0")]
head(tt)
tt$sp = paste(tt$genus,tt$epithet)
tt$sVol = pi*(tt$d10/2000)^2*tt$sh/3 # stem volume (cm^3)
tt$sDens = (tt$tdm/100)/(tt$tv/100) # stem density (g/cm^3)
tt$sMass = tt$sVol*tt$sDens # stem mass (g)
tt$cArea = pi*tt$cd1*tt$cd2/40000 # crown projected area (m^2)
tt$cPos = tt$cmean/100 # crown position (m)
tt$medInL = apply(tt[,c("il1","il2","il3","il4","il5")],1,median,na.rm=T)
tt$medTrL = apply(tt[,c("tl1","tl2","tl3","tl4","tl5")],1,median,na.rm=T)
tt$cAbs = (tt$medInL-tt$medTrL)/tt$medInL
tt$hge = tt$cPos/(tt$sMass/1000) # height gain efficiency (m/kg)
tt$lie = tt$cArea*tt$cAbs/(tt$sMass/1000)
tt = tt[!is.na(tt$hge),]
#tt2 = tt2[tt2$cAbs>0 & !is.na(tt2$lie),]
#tt2[tt2$cAbs==0,]
#plot(log(hge)~log(lie),tt2)
#abline(lm(log(hge)~log(lie),tt2),col=2)
#summary(lm(log(hge)~log(lie),tt2))
#plot(lm(log(hge)~log(lie),tt2))
hist(tt$hge)
hist(log(tt$hge),xlab='log(HGE)',main="")
any(tt$hge<=0)
unique(sort(tt$sp[!tt$sp%in%aSize$sp]))
tt[tt$sp%in%aSize$sp,]
nrow(tt[tt$sp%in%aSize$sp,])
tt = tt[tt$sp%in%aSize$sp,]
tt = tt[tt$sp%in%aSize$sp,c("sp","hge")]
head(tt)
tt$aSize = NA
head(tt)
i=1
tt[i,
]
head(aSize)
apply(aSize[,c("q975","q975F")],1,max,na.rm=T)
aSize$aSize = apply(aSize[,c("q975","q975F")],1,max,na.rm=T)
head(aSize)
aSize = read.csv("maxsizes.csv",header=T,as.is=T)
aSize$sp = paste(aSize$Genus,aSize$epithet)
aSize$aSize = apply(aSize[,c("q975","q975F")],1,max,na.rm=T)
head(aSize)
i
tt[i,"sp"]
aSize[tt[i,"sp"],]
aSize[aSize$sp==tt[i,"sp"],]
aSize[aSize$sp==tt[i,"sp"],"aSize"]
tt$aSize = NA
for(i in 1:nrow(tt)){
tt[i,"aSize"] = aSize[aSize$sp==tt[i,"sp"],"aSize"]
}
head(tt)
tt[order(tt$sp),]
tt = tt[order(tt$sp),]
unique(sort(tt$sp))
hist(tt$aSize)
hist(log(tt$aSize))
length(unique(tt$sp)) # number of species
head(tt)
write.csv("HGEvsAS.csv",row.names=F)
write.csv("HGEvsAS.csv",tt,row.names=F)
write.csv(tt,"HGEvsAS.csv",row.names=F)
dd = read.csv("HGEvsAS.csv",col.names=T,as.is=T)
dd = read.csv("HGEvsAS.csv",header=T,as.is=T)
head(dd)
str(dd)
table(dd$sp)
js = table(dd$sp)
ss = length(unique(dd$sp))
ss
hist(log(dd$hge),main="")
hist(log(dd$hge),main="",xlab="log(HGE)")
hist(dd$aSize)
hist(dd$aSize,xlab="Adult size (m)",main="")
aggregate(aSize~sp,dd,mean)
aggregate(aSize~sp,dd,mean)$aSize
hist(aggregate(aSize~sp,dd,mean)$aSize,xlab="Adult size (m)",main="")
hist(dd$aSize,xlab="Adult size (m)",main="")
hist(aggregate(aSize~sp,dd,mean)$aSize,xlab="Adult size (m)",main="")
hist(log(aggregate(aSize~sp,dd,mean)$aSize),xlab="Adult size (m)",main="")
is
dd = read.csv("HGEvsAS.csv",header=T,as.is=T) # data set
head(dd)
str(dd)
ss = length(unique(dd$sp)) # total number of species
is = table(dd$sp) # sampling size of each species
ss
is
ss
max(is)
yy = matrix(,ncol=max(is),nrow=ss)
yy
library(R2jags)
library(lattice)
library(ggplot2)
library(xtable)
ss
head(yy)
1/((pi*(5/2)^2*1.5/3)*1.35)
dd$hge
1/((pi*(5/2)^2*150/3)*1.35)
3/((pi*(2.5/2)^2*300/3)*0.1)
range(dd$hge)
dd[which(dd$hge==min(dd$hge)),]
dd[which(dd$hge==max(dd$hge)),]
ls()
head(tt)
dd[which(dd$hge==min(dd$hge)),]
dd[which(dd$hge==max(dd$hge)),]
range(dd$hge)
range(dd$hge)
range(dd$hge)
diff(range(dd$hge)) # range method to define variances
diff(range(dd$hge))/4 # range method to define variances
range(dd$aSize)
range(dd$hge) # range of HGE used to define the priors
range(dd$aSize) # range of adult sizes used to define priors
diff(range(dd$hge))
diff(range(dd$aSize))
diff(range(dd$hge))/diff(range(dd$aSize))
plot(hge~aSize,dd)
abline(lm(hge~aSize,dd))
abline(lm(hge~aSize,dd),col=2)
plot(log(hge)~aSize,dd)
abline(lm(hge~aSize,dd),col=2)
abline(lm(log(hge)~aSize,dd),col=2)
summary(lm(log(hge)~aSize,dd))
summary(lm(hge~aSize,dd))
plot(hge~aSize,dd)
abline(lm(hge~aSize,dd),col=2)
summary(lm(hge~aSize,dd))
smooth.spline(hge~aSize,dd)
loess(hge~aSize,dd)
abline(loess(hge~aSize,dd),col=2)
abline(predict(loess(hge~aSize,dd)),col=2)
lines(predict(loess(hge~aSize,dd)),col=2)
plot(hge~aSize,dd)
lines(predict(loess(hge~aSize,dd)),col=2,lwd=2)
?loess
plot(hge~aSize,dd)
plot(hge~aSize,dd)
lines(predict(loess(hge~aSize,dd,span=1)),col=2,lwd=2)
lines(predict(loess(hge~aSize,dd,span=10)),col=2,lwd=2)
lines(predict(loess(hge~aSize,dd,span=100)),col=2,lwd=2)
plot(hge~aSize,dd)
lines(predict(loess(hge~aSize,dd,span=100)),col=2,lwd=2)
lines(predict(loess(hge~aSize,dd,span=.001)),col=2,lwd=2)
lines(predict(loess(hge~aSize,dd,span=.01)),col=2,lwd=2)
lines(predict(loess(hge~aSize,dd,span=.1)),col=2,lwd=2)
lines(predict(loess(hge~aSize,dd,span=1000)),col=2,lwd=2)
plot(hge~aSize,dd)
lines(predict(loess(hge~aSize,dd,span=1000)),col=2,lwd=2)
plot(hge~aSize,dd)
lines(predict(loess(hge~aSize,dd)),col=2,lwd=2)
summary(lm(hge~aSize,dd))
diff(range(dd$hge))/diff(range(dd$aSize))
aa
aa = diff(range(dd$hge))/diff(range(dd$aSize))
2*aa/4
4/2*aa #
aa1 = diff(range(dd$hge))/diff(range(dd$aSize)) # maximum possible value for beta1
tau1 = 4/2*aa1 # precision of beta1 according to the range method
aa1
aa2 = range(dd$hge) # range of possible values for the intercept is the same of the range for the data
aa2
aa2 = diff(range(dd$hge)) # range of possible values for the intercept is the same of the range for the data
aa2
4/aa2
tau0 = 4/aa2 # precision of beta0 according to the range method
tau0
m0 = aa2/2 # mean of beta0 assumed to be at the center of the range
aa0 = diff(range(dd$hge)) # range of possible values for the intercept is the same of the range for the data
tau0 = 4/aa0 # precision of beta0 according to the range method
m0 = aa0/2 # mean of beta0 assumed to be at the center of the range
taui = tau1 # precision of beta[i] is set to be the same of beta1
taub = tau1 # precision of beta[i] is set to be the same of beta1
tau0
taub = tau0 # precision of beta[i] is set to be the same of beta0
tau0/2
tau0
range(dgamma(1000,0,1))
range(dgamma(1000,10,1))
range(dgamma(1000,10,10))
range(dgamma(1000,shape=10,scale=10))
range(dgamma(1000,shape=10,rate = =10))
range(dgamma(1000,shape=10,rate =10))
range(dgamma(1000,shape=10,rate =1))
range(dgamma(1000,shape=1,rate =10))
tau0
tau0
ai = 0.001 # minimum value for tau[i]
bi = tau0 # maximum precision for tau[i]
xx = matrix(,ncol=max(is),nrow=ss)
i=1
yy[i,]
is
is[i]
1:is[i]
names(is)
names(is)[i]
dd[dd$sp==names(is)[i],]
dd[dd$sp==names(is)[i],"hge"]
yy = matrix(,ncol=max(is),nrow=ss)
for(i in 1:nrow(yy)){
yy[i,1:is[i]] = dd[dd$sp==names(is)[i],"hge"]
}
head(yy)
xx = matrix(,ncol=max(is),nrow=ss)
for(i in 1:nrow(xx)){
xx[i,1:is[i]] = dd[dd$sp==names(is)[i],"hge"]
}
head(xx)
xx = matrix(,ncol=max(is),nrow=ss)
for(i in 1:nrow(xx)){
xx[i,1:is[i]] = dd[dd$sp==names(is)[i],"aSize"]
}
head(xx)
